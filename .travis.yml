matrix:
  include:
    - language: python
      sudo: required
      python: '2.7'
      branches:
        only:
        - master-qgis2
        - dev-qgis2
      services:
        - docker
      before_install:
        - cd docker
        - docker-compose build qgis2
      install:
        - docker-compose run -d --name qgis2 qgis2
        - cd ..
        - sleep 10
      script:
        - docker exec -it qgis2 sh -c "qgis_testrunner.sh vector_tiles_reader"
      after_success:
        - docker exec -it qgis2 sh -c "cd vector-tiles-reader && export COVERALLS_REPO_TOKEN=$COVERALLS_TOKEN && coveralls"
      before_deploy:
        - cd $TRAVIS_BUILD_DIR
        - mkdir vector_tiles_reader
        - rsync -r -R --exclude-from=.rsync-exclude ext-libs/ ui/ util/ sample_data/ metadata.txt README.md *.py vector_tiles_reader
        - zip -r Vector-Tiles-Reader-${TRAVIS_TAG}.zip vector_tiles_reader
        - rm -rf vector_tiles_reader
      deploy:
        provider: releases
        api_key: $GITHUB_TOKEN
        file: Vector-Tiles-Reader-${TRAVIS_TAG}.zip
        skip_cleanup: true
        draft: true
        on:
          tags: true
          branch: master-qgis2



    #    - language: python
#      sudo: required
#      python: '3.6'
#      branches:
#        only:
#        - master
#        - develop
#      services:
#        - docker
#      before_install:
#        - cd docker
#        - docker-compose build qgis3
#      install:
#        - docker-compose run -d --name qgis3 qgis3
#        - cd ..
#        - sleep 10
#      script:
#        - docker exec -it qgis3 sh -c "qgis_testrunner.sh vector_tiles_reader"

    - language: cpp
      branches:
          only:
          - dev-qgis2
      os:
        - linux
      compiler:
        - gcc
        - clang
      before_script:
        - sudo apt-get update -qq
        - sudo apt-get install gcc-multilib g++-multilib -y
      script:
        - git clone https://github.com/mapbox/protozero.git ../protozero
        - git clone https://github.com/mapbox/vtzero.git ../vtzero
        - cd ../vtzero
        - git submodule update --init
        - cd $TRAVIS_BUILD_DIR/ext-libs/pbf2geojson
        - sudo rm *.so && sudo rm *.dll && cd ../..
        - make linux
        - cd ..
        - docker run --rm dockcross/windows-x64 > ./dockcross-windows-x64 && chmod +x ./dockcross-windows-x64
        - docker run --rm dockcross/windows-x86 > ./dockcross-windows-x86 && chmod +x ./dockcross-windows-x86
        - ./dockcross-windows-x64 sh -c "cd Vector-Tiles-Reader-QGIS-Plugin && make windows64_dockcross"
        - ./dockcross-windows-x86 sh -c "cd Vector-Tiles-Reader-QGIS-Plugin && make windows32_dockcross"
#      deploy:
#        provider: pages
#        skip_cleanup: true
#        github_token: $GITHUB_TOKEN
#        target_branch: pbf2geojson_travis_auto_build
#        local_dir: ext-libs/pbf2geojson
#        on:
#          branch: develop

    - language: cpp
      branches:
          only:
          - dev-qgis2
      os:
        - osx
      compiler:
        - gcc
      script:
        - git clone https://github.com/mapbox/protozero.git ../protozero
        - git clone https://github.com/mapbox/vtzero.git ../vtzero
        - cd ../vtzero
        - git submodule update --init
        - cd $TRAVIS_BUILD_DIR/ext-libs/pbf2geojson
        - sudo rm *.so && sudo rm *.dll && cd ../..
        - make osx
#      deploy:
#        provider: pages
#        skip_cleanup: true
#        github_token: $GITHUB_TOKEN
#        target_branch: Vector-Tiles-Reader-QGIS-Plugin/pbf2geojson_travis_auto_build_osx
#        local_dir: ext-libs/pbf2geojson
#        on:
#          branch: develop

notifications:
    on_success: never # default: change
    on_failure: always # default: always

